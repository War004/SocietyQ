[versions]
# Combined and using latest versions
accompanistSystemuicontroller = "0.30.1"
accompanistNavigationAnimation = "0.31.5-beta"
agp = "8.9.1"
animation = "1.8.0-beta01"
browser = "1.8.0"
coilCompose = "2.4.0"
coilComposeVersion = "2.5.0"
converterGson = "2.9.0"
datastorePreferences = "1.1.2"
gson = "2.11.0"
jsoup = "1.17.2"
kotlin = "2.0.21"  # Taking newer version from second file
coreKtx = "1.15.0"
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
kotlinxCoroutinesAndroid = "1.7.3"
ktorClientAndroid = "2.3.7"
ktorClientCio = "2.1.3"
ktorClientContentNegotiation = "2.3.7"
ktorClientCore = "2.3.7"
ktorClientLoggingJvm = "2.3.7"
ktorClientSerializationJvm = "2.3.7"
ktorSerializationKotlinxJson = "2.3.7"
lifecycleRuntimeKtx = "2.8.7"
activityCompose = "1.10.1"  # Taking newer version from second file
composeBom = "2025.03.00"  # Taking newer version from second file
composeNavigation = "2.9.0-alpha04"
logbackClassic = "1.2.3"
materialIconsExtended = "1.7.8"
navigationCompose = "2.7.4"
okhttp = "4.12.0"
okhttpVersion = "4.12.0"
palette = "1.0.0"
retrofit = "2.9.0"
securityCrypto = "1.1.0-alpha06"
serialization = "1.8.0"
protoliteWellKnownTypes = "18.0.0"
material = "1.12.0"
zxingCore = "3.5.3" # ZXing core library version

[libraries]
#qr code
zxing-core = { group = "com.google.zxing", name = "core", version.ref = "zxingCore" }

# UI and Compose
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version = "0.37.2" }
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanistSystemuicontroller" }
accompanistNavigationAnimation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanistNavigationAnimation" }
androidx-animation = { module = "androidx.compose.animation:animation", version.ref = "animation" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconsExtended" }
androidx-palette = { module = "androidx.palette:palette", version.ref = "palette" }
androidx-ui = { group = "androidx.compose.ui", name = "ui" }
androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
androidx-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
coil-compose-v250 = { module = "io.coil-kt:coil-compose", version.ref = "coilComposeVersion" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coilCompose" }

# Core
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "browser" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }

# Lifecycle
androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleRuntimeKtx" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleRuntimeKtx" }

# Navigation
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
androidx-navigation-compose-v274 = { module = "androidx.navigation:navigation-compose", version.ref = "navigationCompose" }

# Data storage
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
androidx-security-crypto = { module = "androidx.security:security-crypto", version.ref = "securityCrypto" }

# Networking - Retrofit & OkHttp
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "converterGson" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-v4110 = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttpVersion" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

# Networking - Ktor
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktorClientAndroid" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktorClientCio" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktorClientContentNegotiation" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktorClientCore" }
ktor-client-logging-jvm = { module = "io.ktor:ktor-client-logging-jvm", version.ref = "ktorClientLoggingJvm" }
ktor-client-serialization-jvm = { module = "io.ktor:ktor-client-serialization-jvm", version.ref = "ktorClientSerializationJvm" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktorSerializationKotlinxJson" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logbackClassic" }

# Concurrency
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutinesAndroid" }

# Serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization"}

# Others
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
protolite-well-known-types = { group = "com.google.firebase", name = "protolite-well-known-types", version.ref = "protoliteWellKnownTypes" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }